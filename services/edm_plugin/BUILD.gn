# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("plugin.gni")

edm_plugin_shared_library("datetime_manager_plugin") {
  sources = [ "./src/set_datetime_plugin.cpp" ]

  external_deps = [
    "ability_runtime:wantagent_innerkits",
    "c_utils:utils",
    "time_service:time_client",
  ]
}

edm_plugin_shared_library("account_manager_plugin") {
  sources = [ "./src/disallow_add_local_account_plugin.cpp" ]

  external_deps = [
    "ability_runtime:wantagent_innerkits",
    "c_utils:utils",
    "os_account:os_account_innerkits",
  ]
}

edm_plugin_shared_library("device_info_plugin") {
  sources = [
    "./src/get_device_name_plugin.cpp",
    "./src/get_device_serial_plugin.cpp",
    "./src/get_display_version_plugin.cpp",
  ]

  deps = [ "../../common/native:edm_commom" ]

  external_deps = [
    "c_utils:utils",
    "init:libbegetutil",
  ]
}

edm_plugin_shared_library("device_control_plugin") {
  sources = [
    "./src/lock_screen_plugin.cpp",
    "./src/shutdown_plugin.cpp",
    "./src/reset_factory_plugin.cpp",
  ]

  external_deps = [
    "c_utils:utils",
    "screenlock_mgr:screenlock_client",
    "power_manager:powermgr_client",
  ]

  if (defined(global_parts_info) &&
      defined(global_parts_info.updater_update_service)) {
    external_deps += [ "update_service:updateservicekits" ]
  } else {
    external_deps += [ "dupdate_engine:updateservicekits" ]
  }
}

edm_plugin_shared_library("wifi_manager_plugin") {
  include_dirs = [ "./include/utils" ]

  sources = [
    "./src/is_wifi_active_plugin.cpp",
    "./src/set_wifi_profile_plugin.cpp",
    "./src/utils/wifi_device_config_serializer.cpp",
  ]

  deps = [ "../../common/native:edm_commom" ]

  external_deps = [
    "c_utils:utils",
    "wifi:wifi_sdk",
  ]
}

edm_plugin_shared_library("network_manager_plugin") {
  include_dirs = [
    "./include/network",
    "./include/network/executer",
    "./include/network/rule",
    "./include/utils",
  ]

  sources = [
    "./src/disabled_network_interface_plugin.cpp",
    "./src/domain_filter_rule_plugin.cpp",
    "./src/firewall_rule_plugin.cpp",
    "./src/get_all_network_interfaces_plugin.cpp",
    "./src/get_ip_address_plugin.cpp",
    "./src/get_mac_plugin.cpp",
    "./src/global_proxy_plugin.cpp",
    "./src/iptables_rule_plugin.cpp",
    "./src/network/executer/domain_executer.cpp",
    "./src/network/executer/executer_factory.cpp",
    "./src/network/executer/executer_utils.cpp",
    "./src/network/executer/firewall_executer.cpp",
    "./src/network/executer/iexecuter.cpp",
    "./src/network/iptables_manager.cpp",
    "./src/network/rule/chain_rule.cpp",
    "./src/network/rule/domain_chain_rule.cpp",
    "./src/network/rule/firewall_chain_rule.cpp",
    "./src/network/rule/rule_utils.cpp",
    "./src/utils/domain_filter_rule_serializer.cpp",
    "./src/utils/firewall_rule_serializer.cpp",
    "./src/utils/http_proxy_serializer.cpp",
  ]

  deps = [ "../../common/native:edm_commom" ]

  external_deps = [
    "c_utils:utils",
    "netmanager_base:net_conn_manager_if",
    "netmanager_base:netsys_controller",
    "netmanager_ext:ethernet_manager_if",
  ]
}

edm_plugin_shared_library("bundle_manager_plugin") {
  include_dirs = [ "./include/utils" ]

  sources = [
    "./src/allowed_install_bundles_plugin.cpp",
    "./src/bundle_install_plugin.cpp",
    "./src/disallowed_install_bundles_plugin.cpp",
    "./src/disallowed_uninstall_bundles_plugin.cpp",
    "./src/install_plugin.cpp",
    "./src/uninstall_plugin.cpp",
    "./src/utils/install_param_serializer.cpp",
    "./src/utils/installer_callback.cpp",
    "./src/utils/uninstall_param_serializer.cpp",
  ]

  deps = [ "../../common/native:edm_commom" ]

  external_deps = [
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "ipc:ipc_core",
  ]
}

edm_plugin_shared_library("disallow_modify_datetime_plugin") {
  sources = [ "./src/disallow_modify_datetime_plugin.cpp" ]

  deps = [ "../../common/native:edm_commom" ]

  external_deps = [
    "c_utils:utils",
    "ipc:ipc_core",
  ]
}

edm_plugin_shared_library("application_manager_plugin") {
  sources = [ "./src/disallowed_running_bundles_plugin.cpp" ]

  deps = [ "../../common/native:edm_commom" ]

  external_deps = [
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "ipc:ipc_core",
  ]
}

edm_plugin_shared_library("device_settings_plugin") {
  sources = [
    "./src/power_policy_plugin.cpp",
    "./src/screen_off_time_plugin.cpp",
    "./src/user_cert_plugin.cpp",
  ]

  deps = [
    "../../common/native:edm_commom",
    "../../interfaces/inner_api:edmservice_kits",
    "//third_party/jsoncpp:jsoncpp",
  ]

  external_deps = [
    "c_utils:utils",
    "certificate_manager:cert_manager_sdk",
  ]
}

edm_plugin_shared_library("system_manager_plugin") {
  sources = [ "./src/ntp_server_plugin.cpp" ]

  deps = [ "../../common/native:edm_commom" ]

  external_deps = [
    "c_utils:utils",
    "init:libbegetutil",
  ]
}

edm_plugin_shared_library("usb_manager_plugin") {
  sources = [ "./src/usb_read_only_plugin.cpp" ]

  deps = [ "../../common/native:edm_commom" ]

  external_deps = [ "init:libbegetutil" ]
}

edm_plugin_shared_library("restrictions_plugin") {
  sources = [
    "./src/disable_hdc_plugin.cpp",
    "./src/disable_printer_plugin.cpp",
  ]

  external_deps = [
    "c_utils:utils",
    "init:libbegetutil",
  ]
}

edm_plugin_shared_library("browser_plugin") {
  sources = [ "./src/set_browser_policies_plugin.cpp" ]

  deps = [ "../../common/native:edm_commom" ]

  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
  ]
}

edm_plugin_shared_library("security_manager_plugin") {
  sources = [
    "./src/get_device_encryption_status_plugin.cpp",
    "./src/get_security_patch_tag_plugin.cpp",
  ]

  deps = [ "../../common/native:edm_commom" ]

  external_deps = [
    "c_utils:utils",
    "init:libbegetutil",
  ]
}
