# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/idl_tool/idl.gni")
import("//build/ohos.gni")

idl_gen_interface("enterprise_device_mgr_idl") {
  sources = [ "IEnterpriseDeviceMgrIdl.idl" ]
  sources_common = [ "AdminType.idl" ]
  target_type = "source_set"
  log_domainid = "0xD001E00"
  log_tag = "EDM"
  subsystem_name = "customization"
  part_name = "enterprise_device_management"
}

config("enterprise_device_mgr_idl_gen_config") {
  include_dirs = [
    "./include",
    "../../common/native/include",
    "../../interfaces/inner_api/common/include",
    "${target_gen_dir}",
  ]
}

ohos_source_set("enterprise_device_mgr_idl_proxy") {
  idl_output_values = get_target_outputs(":enterprise_device_mgr_idl")
  sources = []
  sources += filter_include(idl_output_values, ["*_proxy.cpp"])
  public_configs = [":enterprise_device_mgr_idl_gen_config"]
  deps = [
    ":enterprise_device_mgr_idl",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
    "ability_base:want",
  ]

  sanitize = {
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    integer_overflow = true
    ubsan = true
  }
  branch_protector_ret = "pac_ret"
  subsystem_name = "customization"
  part_name = "enterprise_device_management"
}

ohos_source_set("enterprise_device_mgr_idl_stub") {
  idl_output_values = get_target_outputs(":enterprise_device_mgr_idl")
  sources = []
  sources += filter_include(idl_output_values, ["*_stub.cpp"])
  public_configs = [":enterprise_device_mgr_idl_gen_config"]
  deps = [
    ":enterprise_device_mgr_idl",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
    "ability_base:want",
  ]

  sanitize = {
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    integer_overflow = true
    ubsan = true
  }
  branch_protector_ret = "pac_ret"
  subsystem_name = "customization"
  part_name = "enterprise_device_management"
}
