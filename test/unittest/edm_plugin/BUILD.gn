# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")

module_output_path = "enterprise_device_management/services"

config("module_private_config") {
  visibility = [ ":*" ]
}

ohos_unittest("EdmGetDeviceNamePluginTest") {
  module_out_path = module_output_path

  include_dirs = [
    "../../../services/edm_plugin/include",
    "../include",
  ]

  sources = [
    "../src/utils.cpp",
    "./bundle_install_plugin_test.cpp",
    "./device_info_plugin_test.cpp",
    "./disallow_add_local_account_plugin_test.cpp",
    "./disallow_modify_datetime_plugin_test.cpp",
    "./disallowed_running_bundles_plugin_test.cpp",
    "./edm_data_ability_utils_mock.cpp",
    "./get_device_name_plugin_test.cpp",
    "./get_screen_off_time_plugin_test.cpp",
    "./is_wifi_active_plugin_test.cpp",
    "./network_manager_plugin_test.cpp",
    "./reset_factory_plugin_test.cpp",
    "./set_wifi_profile_plugin_test.cpp",
    "./wifi_device_config_serializer_test.cpp",
  ]

  configs = [
    ":module_private_config",
    "../../../common/config:coverage_flags",
  ]

  deps = [
    ":edm_all_plugin_static",
    "../../../common/native:edm_commom",
    "../../../interfaces/inner_api:edmservice_kits",
    "../../../interfaces/inner_api/plugin_kits:plugin_kits",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "init:libbegetutil",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "wifi:wifi_sdk",
  ]

  if (defined(global_parts_info) &&
      defined(global_parts_info.updater_update_service)) {
    external_deps += [ "update_service:updateservicekits" ]
  } else {
    external_deps += [ "dupdate_engine:updateservicekits" ]
  }

  if (is_standard_system) {
    external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }

  subsystem_name = "customization"
  part_name = "enterprise_device_management"
}

ohos_static_library("edm_all_plugin_static") {
  visibility = [ ":*" ]
  testonly = true
  sources = [
    "../../../services/edm_plugin/src/allowed_install_bundles_plugin.cpp",
    "../../../services/edm_plugin/src/bundle_install_plugin.cpp",
    "../../../services/edm_plugin/src/disabled_network_interface_plugin.cpp",
    "../../../services/edm_plugin/src/disallow_add_local_account_plugin.cpp",
    "../../../services/edm_plugin/src/disallow_modify_datetime_plugin.cpp",
    "../../../services/edm_plugin/src/disallowed_install_bundles_plugin.cpp",
    "../../../services/edm_plugin/src/disallowed_running_bundles_plugin.cpp",
    "../../../services/edm_plugin/src/disallowed_uninstall_bundles_plugin.cpp",
    "../../../services/edm_plugin/src/get_all_network_interfaces_plugin.cpp",
    "../../../services/edm_plugin/src/get_device_name_plugin.cpp",
    "../../../services/edm_plugin/src/get_device_serial_plugin.cpp",
    "../../../services/edm_plugin/src/get_display_version_plugin.cpp",
    "../../../services/edm_plugin/src/get_ip_address_plugin.cpp",
    "../../../services/edm_plugin/src/get_mac_plugin.cpp",
    "../../../services/edm_plugin/src/get_screen_off_time_plugin.cpp",
    "../../../services/edm_plugin/src/is_wifi_active_plugin.cpp",
    "../../../services/edm_plugin/src/reset_factory_plugin.cpp",
    "../../../services/edm_plugin/src/set_wifi_profile_plugin.cpp",
    "../../../services/edm_plugin/src/wifi_device_config_serializer.cpp",
  ]

  configs = [ "../../../common/config:coverage_flags" ]
  include_dirs = [ "../../../services/edm_plugin/include" ]

  deps = [
    "../../../common/native:edm_commom",
    "../../../interfaces/inner_api/plugin_kits:plugin_kits",
    "//third_party/bounds_checking_function:libsec_shared",
    "//third_party/jsoncpp:jsoncpp",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "init:libbegetutil",
    "netmanager_ext:ethernet_manager_if",
    "os_account:os_account_innerkits",
    "wifi:wifi_sdk",
  ]

  if (defined(global_parts_info) &&
      defined(global_parts_info.updater_update_service)) {
    external_deps += [ "update_service:updateservicekits" ]
  } else {
    external_deps += [ "dupdate_engine:updateservicekits" ]
  }

  if (is_standard_system) {
    external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }
  subsystem_name = "customization"
  part_name = "enterprise_device_management"
}

group("unittest") {
  testonly = true

  deps = [
    # deps file
    ":EdmGetDeviceNamePluginTest",
  ]
}
