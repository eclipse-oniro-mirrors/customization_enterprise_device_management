# Copyright (c) 2023-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/features.gni")
import("//build/ohos.gni")
import("//build/test.gni")
import("../../../common/config/common.gni")
module_output_path = "enterprise_device_management/enterprise_device_management"

config("module_private_config") {
  visibility = [ ":*" ]
  include_dirs = [ "../" ]
}

config("edm_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "../../../services/edm/include",
    "../../../services/edm/include/connection",
    "../../../services/edm/include/database",
    "../../../services/edm/include/query_policy",
    "../../../services/edm/include/strategy",
    "../../../services/edm/include/watermark",
    "../../../services/edm_plugin/include/utils",
    "../../../framework/extension/include",
    "../../../services/edm_plugin/include",
    "../../../services/edm_plugin/include/network",
    "../../../services/edm_plugin/include/network/executer",
    "../../../services/edm_plugin/include/network/rule",
    "../../../services/edm_plugin/include/utils",
  ]
}

ohos_static_library("edmservice_fuzz_static") {
  testonly = true
  sources = [
    "../../../services/edm/src/admin.cpp",
    "../../../services/edm/src/admin_container.cpp",
    "../../../services/edm/src/admin_manager.cpp",
    "../../../services/edm/src/admin_policies_storage_rdb.cpp",
    "../../../services/edm/src/application_state_observer.cpp",
    "../../../services/edm/src/connection/enterprise_account_connection.cpp",
    "../../../services/edm/src/connection/enterprise_admin_connection.cpp",
    "../../../services/edm/src/connection/enterprise_admin_proxy.cpp",
    "../../../services/edm/src/connection/enterprise_bundle_connection.cpp",
    "../../../services/edm/src/connection/enterprise_conn_manager.cpp",
    "../../../services/edm/src/connection/enterprise_kiosk_connection.cpp",
    "../../../services/edm/src/connection/enterprise_update_connection.cpp",
    "../../../services/edm/src/database/edm_rdb_data_manager.cpp",
    "../../../services/edm/src/database/edm_rdb_open_callback.cpp",
    "../../../services/edm/src/device_policies_storage_rdb.cpp",
    "../../../services/edm/src/enterprise_device_mgr_ability.cpp",
    "../../../services/edm/src/enterprise_device_mgr_stub.cpp",
    "../../../services/edm/src/hisysevent_adapter.cpp",
    "../../../services/edm/src/permission_checker.cpp",
    "../../../services/edm/src/permission_manager.cpp",
    "../../../services/edm/src/plugin_manager.cpp",
    "../../../services/edm/src/policy_manager.cpp",
    "../../../services/edm/src/query_policy/allowed_app_distribution_types_query.cpp",
    "../../../services/edm/src/query_policy/allowed_install_bundles_query.cpp",
    "../../../services/edm/src/query_policy/disable_app_clone_query.cpp",
    "../../../services/edm/src/query_policy/disable_maintenance_mode_query.cpp",
    "../../../services/edm/src/query_policy/disallow_random_mac_address_query.cpp",
    "../../../services/edm/src/query_policy/disable_mtp_client_query.cpp",
    "../../../services/edm/src/query_policy/disable_mtp_server_query.cpp",
    "../../../services/edm/src/query_policy/disable_samba_client_query.cpp",
    "../../../services/edm/src/query_policy/disable_samba_server_query.cpp",
    "../../../services/edm/src/query_policy/disable_set_biometrics_and_screenLock_query.cpp",
    "../../../services/edm/src/query_policy/disable_set_device_name_query.cpp",
    "../../../services/edm/src/query_policy/disable_sudo_query.cpp",
    "../../../services/edm/src/query_policy/disable_user_mtp_client_query.cpp",
    "../../../services/edm/src/query_policy/disable_print_query.cpp",
    "../../../services/edm/src/query_policy/disallow_distributed_transmission_query.cpp",
    "../../../services/edm/src/query_policy/disallow_export_recovery_key_query.cpp",
    "../../../services/edm/src/query_policy/disallow_modify_datetime_query.cpp",
    "../../../services/edm/src/query_policy/disallow_modify_ethernet_ip_query.cpp",
    "../../../services/edm/src/query_policy/disallowed_install_bundles_query.cpp",
    "../../../services/edm/src/query_policy/disallowed_tethering_query.cpp",
    "../../../services/edm/src/query_policy/disallowed_uninstall_bundles_query.cpp",
    "../../../services/edm/src/query_policy/get_auto_unlock_after_reboot_query.cpp",
    "../../../services/edm/src/query_policy/get_device_encryption_status_query.cpp",
    "../../../services/edm/src/query_policy/get_display_version_query.cpp",
    "../../../services/edm/src/query_policy/get_security_patch_tag_query.cpp",
    "../../../services/edm/src/query_policy/inactive_user_freeze_query.cpp",
    "../../../services/edm/src/query_policy/installed_bundle_info_list_query.cpp",
    "../../../services/edm/src/query_policy/ipolicy_query.cpp",
    "../../../services/edm/src/query_policy/is_app_kiosk_allowed_query.cpp",
    "../../../services/edm/src/query_policy/ntp_server_query.cpp",
    "../../../services/edm/src/query_policy/plugin_policy_reader.cpp",
    "../../../services/edm/src/query_policy/snapshot_skip_query.cpp",
    "../../../services/edm/src/strategy/enhance_execute_strategy.cpp",
    "../../../services/edm/src/strategy/replace_execute_strategy.cpp",
    "../../../services/edm/src/strategy/single_execute_strategy.cpp",
    "../../../services/edm/src/user_policy_manager.cpp",
    "../../../services/edm_plugin/src/utils/installer_callback.cpp",
    "../../../services/edm_plugin/src/utils/operate_device_param_serializer.cpp",
    "../../../services/edm_plugin/src/utils/uninstall_param_serializer.cpp",
    "../../../services/edm_plugin/src/utils/clear_up_application_data_param_serializer.cpp",
  ]

  sources += [
    "../../../services/edm_plugin/src/disallowed_nearlink_protocols_plugin.cpp",
    "../../../services/edm_plugin/src/utils/nearlink_config_utils.cpp",
    "../../../services/edm_plugin/src/utils/nearlink_protocol_utils.cpp",
  ]
  
  public_configs = [
    ":edm_config",
    "../../../common/config:coverage_flags",
  ]

  defines = []

  if (target_cpu == "arm64") {
    defines += [ "_ARM64_" ]
    print("defines _ARM64_")
  }

  if (target_cpu == "x86_64") {
    defines += [ "_X86_64_" ]
    print("defines _X86_64_")
  }

  defines += [ "EDM_FUZZ_TEST" ]
  defines += [ "COMMON_EVENT_SERVICE_EDM_ENABLE" ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "ability_runtime:extension_manager",
    "ability_runtime:wantagent_innerkits",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "access_token:libnativetoken_shared",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "bundle_framework:libappexecfwk_common",
    "cJSON:cjson",
    "c_utils:utils",
    "distributed_notification_service:ans_innerkits",
    "file_api:securitylabel",
    "graphic_2d:librender_service_client",
    "graphic_2d:librender_service_base",
    "common_event_service:cesfwk_innerkits",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "init:libbegetutil",
    "ipc:ipc_core",
    "netmanager_base:netsys_controller",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "window_manager:sms",
    "window_manager:libwm",
    "window_manager:session_manager_lite",
    "jsoncpp:jsoncpp",
  ]

  deps = [
    "../../../common/external:edm_external_adapters",
    "../../../common/native:edm_commom",
    "../../../interfaces/inner_api:edmservice_kits",
    "../../../interfaces/inner_api/plugin_kits:plugin_kits",
    "../../../services/idl:enterprise_device_mgr_idl_stub",
  ]

  if (enterprise_device_management_support_all) {
    defines += [ "EDM_SUPPORT_ALL_ENABLE" ]
    sources += [
      "../../../services/edm_plugin/src/allowed_app_distribution_types_plugin.cpp",
      "../../../services/edm_plugin/src/allowed_install_bundles_plugin.cpp",
      "../../../services/edm_plugin/src/bundle_install_plugin.cpp",
      "../../../services/edm_plugin/src/disable_maintenance_mode_plugin.cpp",
      "../../../services/edm_plugin/src/disallow_random_mac_address_plugin.cpp",
      "../../../services/edm_plugin/src/disable_mtp_client_plugin.cpp",
      "../../../services/edm_plugin/src/disable_mtp_server_plugin.cpp",
      "../../../services/edm_plugin/src/disable_user_mtp_client_plugin.cpp",
      "../../../services/edm_plugin/src/disable_samba_client_plugin.cpp",
      "../../../services/edm_plugin/src/disable_samba_server_plugin.cpp",
      "../../../services/edm_plugin/src/disable_set_biometrics_and_screenLock_plugin.cpp",
      "../../../services/edm_plugin/src/disable_set_device_name_plugin.cpp",
      "../../../services/edm_plugin/src/disallow_export_recovery_key_plugin.cpp",
      "../../../services/edm_plugin/src/disallow_distributed_transmission_plugin.cpp",
      "../../../services/edm_plugin/src/disallow_modify_datetime_plugin.cpp",
      "../../../services/edm_plugin/src/disallowed_install_bundles_plugin.cpp",
      "../../../services/edm_plugin/src/disallowed_uninstall_bundles_plugin.cpp",
      "../../../services/edm_plugin/src/get_device_info_plugin.cpp",
      "../../../services/edm_plugin/src/install_plugin.cpp",
      "../../../services/edm_plugin/src/installed_bundle_info_list_plugin.cpp",
      "../../../services/edm_plugin/src/ntp_server_plugin.cpp",
      "../../../services/edm_plugin/src/operate_device_plugin.cpp",
      "../../../services/edm_plugin/src/power_policy_plugin.cpp",
      "../../../services/edm_plugin/src/screen_off_time_plugin.cpp",
      "../../../services/edm_plugin/src/uninstall_plugin.cpp",
      "../../../services/edm_plugin/src/set_allowed_kiosk_apps_plugin.cpp",
      "../../../services/edm_plugin/src/clear_up_application_data_plugin.cpp",
      "../../../services/edm_plugin/src/utils/allowed_app_distribution_types_utils.cpp",
    ]

    if (os_account_edm_enable) {
      external_deps += [
        "os_account:libaccountkits",
        "os_account:os_account_innerkits",
      ]
      sources += [
        "../../../services/edm/src/query_policy/disallow_add_local_account_query.cpp",
        "../../../services/edm/src/watermark/watermark_application_observer.cpp",
        "../../../services/edm/src/watermark/watermark_observer_manager.cpp",
        "../../../services/edm_plugin/src/add_os_account_plugin.cpp",
        "../../../services/edm_plugin/src/disallow_add_local_account_plugin.cpp",
        "../../../services/edm_plugin/src/disallow_add_os_account_by_user_plugin.cpp",
      ]
      defines += [ "OS_ACCOUNT_EDM_ENABLE" ]
    }

    if (os_account_edm_enable && enterprise_device_management_feature_pc_only) {
      external_deps += [
        "os_account:libaccountkits",
        "os_account:os_account_innerkits",
      ]
      sources += [
        "../../../services/edm_plugin/src/disable_sudo_plugin.cpp",
      ]
      defines += [ "SUDO_EDM_ENABLE" ]
    }

    if (screenlock_mgr_edm_enable) {
      external_deps += [ "screenlock_mgr:screenlock_client" ]
      sources += [ "../../../services/edm_plugin/src/lock_screen_plugin.cpp" ]
    }

    if (power_manager_edm_enable && screenlock_mgr_edm_enable) {
      external_deps += [ "power_manager:powermgr_client" ]
      sources += [
        "../../../services/edm_plugin/src/reboot_plugin.cpp",
        "../../../services/edm_plugin/src/shutdown_plugin.cpp",
      ]
    }

    if (update_service_edm_enable) {
      external_deps += [ "update_service:updateservicekits" ]
      sources += [ "../../../services/edm_plugin/src/reset_factory_plugin.cpp" ]
    }

    if (wifi_edm_enable) {
      external_deps += [ "wifi:wifi_sdk" ]
      sources += [
        "../../../services/edm/src/query_policy/allowed_wifi_list_query.cpp",
        "../../../services/edm/src/query_policy/disallowed_wifi_list_query.cpp",
        "../../../services/edm/src/query_policy/set_wifi_disabled_query.cpp",
        "../../../services/edm_plugin/src/allowed_wifi_list_plugin.cpp",
        "../../../services/edm_plugin/src/disallowed_wifi_list_plugin.cpp",
        "../../../services/edm_plugin/src/is_wifi_active_plugin.cpp",
        "../../../services/edm_plugin/src/set_wifi_disabled_plugin.cpp",
        "../../../services/edm_plugin/src/set_wifi_profile_plugin.cpp",
        "../../../services/edm_plugin/src/utils/wifi_device_config_serializer.cpp",
        "../../../services/edm_plugin/src/utils/wifi_policy_utils.cpp",
      ]
      defines += [ "WIFI_EDM_ENABLE" ]
    }

    if (netmanager_base_edm_enable && netmanager_ext_edm_enable) {
      external_deps += [
        "netmanager_base:net_conn_manager_if",
        "netmanager_base:net_policy_manager_if",
        "netmanager_base:netsys_controller",
        "netmanager_ext:ethernet_manager_if",
        "netmanager_ext:net_vpn_manager_if",
      ]
      sources += [
        "../../../services/edm_plugin/src/disabled_network_interface_plugin.cpp",
        "../../../services/edm_plugin/src/domain_filter_rule_plugin.cpp",
        "../../../services/edm_plugin/src/firewall_rule_plugin.cpp",
        "../../../services/edm_plugin/src/get_all_network_interfaces_plugin.cpp",
        "../../../services/edm_plugin/src/get_ip_or_mac_address_plugin.cpp",
        "../../../services/edm_plugin/src/global_proxy_plugin.cpp",
        "../../../services/edm_plugin/src/iptables_rule_plugin.cpp",
        "../../../services/edm_plugin/src/network/executer/domain_executer.cpp",
        "../../../services/edm_plugin/src/network/executer/executer_factory.cpp",
        "../../../services/edm_plugin/src/network/executer/executer_utils.cpp",
        "../../../services/edm_plugin/src/network/executer/firewall_executer.cpp",
        "../../../services/edm_plugin/src/network/executer/iexecuter.cpp",
        "../../../services/edm_plugin/src/network/iptables_manager.cpp",
        "../../../services/edm_plugin/src/network/rule/chain_rule.cpp",
        "../../../services/edm_plugin/src/network/rule/domain_chain_rule.cpp",
        "../../../services/edm_plugin/src/network/rule/firewall_chain_rule.cpp",
        "../../../services/edm_plugin/src/network/rule/rule_utils.cpp",
        "../../../services/edm_plugin/src/utils/domain_filter_rule_serializer.cpp",
        "../../../services/edm_plugin/src/utils/firewall_rule_serializer.cpp",
        "../../../services/edm_plugin/src/utils/http_proxy_serializer.cpp",
        "../../../services/edm_plugin/src/disallowed_airplane_mode_plugin.cpp",
        "../../../services/edm_plugin/src/disallow_vpn_plugin.cpp",
      ]
    }

    if (ability_runtime_edm_enable) {
      external_deps += [ "ability_runtime:ability_manager" ]
      sources += [
        "../../../services/edm/src/query_policy/allowed_running_bundles_query.cpp",
        "../../../services/edm/src/query_policy/disallowed_running_bundles_query.cpp",
        "../../../services/edm_plugin/src/allowed_running_bundles_plugin.cpp",
        "../../../services/edm_plugin/src/disallowed_running_bundles_plugin.cpp",
        "../../../services/edm_plugin/src/manage_auto_start_apps_plugin.cpp",
        "../../../services/edm_plugin/src/manage_keep_alive_apps_plugin.cpp",
        "../../../services/edm_plugin/src/utils/bms_utils.cpp",
        "../../../services/edm_plugin/src/utils/manage_auto_start_apps_serializer.cpp",
        "../../../services/edm_plugin/src/utils/manage_auto_start_app_info.cpp",
        "../../../services/edm_plugin/src/utils/manage_keep_alive_apps_info.cpp",
        "../../../services/edm_plugin/src/utils/manage_keep_alive_apps_serializer.cpp"
      ]
    }

    if (certificate_manager_edm_enable) {
      external_deps += [ "certificate_manager:cert_manager_sdk" ]
      sources += [ "../../../services/edm_plugin/src/user_cert_plugin.cpp" ]
    }

    if (drivers_interface_usb_edm_enable && usb_manager_edm_enable) {
      external_deps += [ "usb_manager:usbsrv_client" ]
      sources += [
        "../../../services/edm/src/query_policy/allowed_usb_devices_query.cpp",
        "../../../services/edm/src/query_policy/disable_usb_query.cpp",
        "../../../services/edm_plugin/src/allowed_usb_devices_plugin.cpp",
        "../../../services/edm_plugin/src/disable_usb_plugin.cpp",
        "../../../services/edm_plugin/src/utils/array_usb_device_type_serializer.cpp",
        "../../../services/edm_plugin/src/utils/usb_policy_utils.cpp",
      ]
    }

    if (drivers_interface_usb_edm_enable && storage_service_edm_enable &&
        usb_manager_edm_enable) {
      external_deps += [ "storage_service:storage_manager_sa_proxy" ]
      sources += [
        "../../../services/edm/src/query_policy/usb_read_only_query.cpp",
        "../../../services/edm_plugin/src/usb_read_only_plugin.cpp",
      ]
    }
    
    if (storage_service_edm_enable) {
      external_deps += [ "storage_service:storage_manager_sa_proxy" ]
      sources += [
        "../../../services/edm/src/query_policy/disallow_external_storage_card_query.cpp",
        "../../../services/edm_plugin/src/disallow_external_storage_card_plugin.cpp"
      ]
    }

    if (audio_framework_edm_enable) {
      external_deps += [ "audio_framework:audio_client" ]
      sources += [
        "../../../services/edm/src/query_policy/disable_hdc_query.cpp",
        "../../../services/edm/src/query_policy/disable_microphone_query.cpp",
        "../../../services/edm/src/query_policy/disable_printer_query.cpp",
        "../../../services/edm_plugin/src/disable_hdc_plugin.cpp",
        "../../../services/edm_plugin/src/disable_microphone_plugin.cpp",
        "../../../services/edm_plugin/src/disable_printer_plugin.cpp",
      ]
    }

    if (common_event_service_edm_enable) {
      external_deps += [ "common_event_service:cesfwk_innerkits" ]
      sources += [
        "../../../services/edm/src/query_policy/set_browser_policies_query.cpp",
        "../../../services/edm_plugin/src/set_browser_policies_plugin.cpp",
      ]
      defines += [ "COMMON_EVENT_SERVICE_EDM_ENABLE" ]
    }

    if (bluetooth_edm_enable) {
      external_deps += [ "bluetooth:btframework" ]
      sources += [
        "../../../services/edm/src/query_policy/allowed_bluetooth_devices_query.cpp",
        "../../../services/edm/src/query_policy/disable_bluetooth_query.cpp",
        "../../../services/edm_plugin/src/allowed_bluetooth_devices_plugin.cpp",
        "../../../services/edm_plugin/src/disable_bluetooth_plugin.cpp",
        "../../../services/edm_plugin/src/get_bluetooth_info_plugin.cpp",
      ]
    }

    if (location_edm_enable) {
      external_deps += [ "location:locator_sdk" ]
      sources += [
        "../../../services/edm/src/query_policy/location_policy_query.cpp",
        "../../../services/edm_plugin/src/location_policy_plugin.cpp",
      ]
    }

    if (telephony_core_edm_enable) {
      external_deps += [ "core_service:tel_core_service_api" ]
      defines += [ "TELEPHONY_CORE_EDM_ENABLE" ]
    }

    if (pasteboard_edm_enable) {
      sources += [
        "../../../services/edm/src/query_policy/clipboard_policy_query.cpp",
      ]
      external_deps += [ "pasteboard:pasteboard_client" ]
    }

    sources += [
        "../../../services/edm/src/query_policy/permission_managed_state_query.cpp",
      ]

    if (useriam_edm_enable) {
      external_deps += [ "user_auth_framework:userauth_client" ]
      defines += [ "USERIAM_EDM_ENABLE" ]
      sources += [
        "../../../services/edm/src/query_policy/fingerprint_auth_query.cpp",
        "../../../services/edm/src/query_policy/password_policy_query.cpp",
        "../../../services/edm_plugin/src/fingerprint_auth_plugin.cpp",
        "../../../services/edm_plugin/src/password_policy_plugin.cpp",
      ]
    }

    if (camera_framework_edm_enable) {
      sources +=
          [ "../../../services/edm/src/query_policy/disable_camera_query.cpp" ]
      defines += [ "CAMERA_FRAMEWORK_EDM_ENABLE" ]
    }

    if (!enterprise_device_management_feature_pc_only) {
      sources += [ "../../../services/edm/src/query_policy/disable_backup_and_restore_query.cpp" ]
    }

    if (enterprise_device_management_feature_pc_only) {
      sources += [
        "../../../services/edm_plugin/src/disallowed_usb_storage_device_write_plugin.cpp",
        "../../../services/edm/src/query_policy/disable_usb_storage_device_write_query.cpp",
        "../../../services/edm_plugin/src/install_local_enterprise_app_enabled_plugin.cpp",
        "../../../services/edm/src/query_policy/install_local_enterprise_app_enabled_query.cpp",
      ]
      defines += [ "FEATURE_PC_ONLY" ]
    }

    if (!enterprise_device_management_feature_pc_only &&
        cellular_data_edm_enable && telephony_core_edm_enable) {
      external_deps += [
        "call_manager:tel_call_manager_api",
        "cellular_data:tel_cellular_data_api",
        "core_service:tel_core_service_api",
        "data_share:datashare_consumer",
        "telephony_data:tel_telephony_data",
      ]
      sources += [
        "../../../services/edm_plugin/src/disallow_mobile_data_plugin.cpp",
        "../../../services/edm_plugin/src/disallow_modify_apn_plugin.cpp",
        "../../../services/edm_plugin/src/disallowed_sim_plugin.cpp",
        "../../../services/edm_plugin/src/disallowed_telephony_call_plugin.cpp",
        "../../../services/edm_plugin/src/telephony_call_policy_plugin.cpp",
        "../../../services/edm_plugin/src/set_apn_plugin.cpp",
        "../../../services/edm_plugin/src/turnonoff_mobile_data_plugin.cpp",
        "../../../services/edm_plugin/src/utils/apn_utils.cpp",
      ]
      defines += [ "CELLULAR_DATA_EDM_ENABLE" ]
    }

    if (power_manager_edm_enable &&
        !enterprise_device_management_feature_pc_only) {
      sources += [ "../../../services/edm_plugin/src/disallow_power_long_press_plugin.cpp" ]
    }
  }

  sanitize = {
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    integer_overflow = true
    ubsan = true
  }
  branch_protector_ret = "pac_ret"
  subsystem_name = "customization"
  part_name = "enterprise_device_management"
}

ohos_fuzztest("EnterpriseDeviceMgrStubMockFuzzTest") {
  module_out_path = module_output_path

  fuzz_config_file = "."

  cflags = [
    "-g",
    "-fno-omit-frame-pointer",
  ]

  include_dirs = [
    "../common/include",
    "../../unittest/utils/include",
    "../../../interfaces/inner_api/common/include",
    "../../../interfaces/inner_api/device_settings/include",
  ]

  sources = [
    "../common/src/common_fuzzer.cpp",
    "enterprise_device_mgr_stub_mock_fuzzer.cpp",
  ]

  configs = [ "../../../common/config:coverage_flags" ]

  deps = [
    ":edmservice_fuzz_static",
    "../../../common/external:edm_external_adapters",
    "../../../common/native:edm_commom",
    "../../../interfaces/inner_api:edmservice_kits",
    "../../../interfaces/inner_api/plugin_kits:plugin_kits",
    "../../unittest/utils:edm_unittest_utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "access_token:libnativetoken_shared",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "cJSON:cjson",
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "jsoncpp:jsoncpp",
  ]

  if (enterprise_device_management_support_all) {
    if (wifi_edm_enable) {
      external_deps += [ "wifi:wifi_sdk" ]
    }
    if (netmanager_base_edm_enable && netmanager_ext_edm_enable) {
      external_deps += [
        "netmanager_base:net_conn_manager_if",
        "netmanager_base:net_policy_manager_if",
        "netmanager_base:netsys_controller",
        "netmanager_ext:ethernet_manager_if",
      ]
    }
    if (drivers_interface_usb_edm_enable && usb_manager_edm_enable) {
      external_deps += [ "usb_manager:usbsrv_client" ]
    }
    if (drivers_interface_usb_edm_enable && storage_service_edm_enable &&
        usb_manager_edm_enable) {
      external_deps += [ "storage_service:storage_manager_sa_proxy" ]
    }
    if (bluetooth_edm_enable) {
      external_deps += [ "bluetooth:btframework" ]
    }
  }

  subsystem_name = "customization"
  part_name = "enterprise_device_management"
}
